@model ModuleEntry
@{
    ViewBag.Title = "Edit Module/Menu";
    var actions = ViewBag.Actions as IEnumerable<ActionEntry>;
    var actionModules = (ViewBag.ActionModules as IEnumerable<ActionModuleEntry> ?? new List<ActionModuleEntry>());
}

<div class="breadcrumbs" id="breadcrumbs">
    <div class="breadcrumb">
        <a href="#">Setup</a>
        <a href="~/Modules/Index/@Model.ModuleId">Modules</a>
        <a href="#" class="active">@ViewBag.Title</a>
    </div>
</div>

<section id="container">
    <div class="all-margin">
        <form action="~/Modules/Edit" method="post" class="form-horizontal">
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(x => x.NonParent, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    <input type="text" name="NonParent" class="form-control" value="@Model.NonParent" disabled />
                    @Html.HiddenFor(x => x.ParentId)
                    @Html.HiddenFor(x => x.ModuleId)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.ModuleCode, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    <input type="text" name="ModuleCode" class="form-control" value="@Model.ModuleCode" disabled />
                    @Html.HiddenFor(x => x.ModuleCode)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.DisplayName, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(x => x.DisplayName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.DisplayName)
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-5">
                    <div class="checkbox custom-bg">
                        <label>
                            @Html.CheckBoxFor(x => x.DisplayAsMenu)
                            <span>Display As Module/Menu</span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.SeqNo, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(x => x.SeqNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.SeqNo)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.ClassName, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(x => x.ClassName, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Url, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(x => x.Url, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Description, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-5">
                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", style = "height:80px;" })
                </div>
            </div>
            
            <div class="form-group">
                <label class="col-sm-3 control-label">Relating Actions to Module</label>
                <div class="col-sm-5">
                    <ul class="ul-list">
                        @foreach (var item in (actions ?? new List<ActionEntry>()))
                        {
                            var info = actionModules.FirstOrDefault(x => x.ActionId == item.ActionId);
                            string strChecked = string.Empty;
                            int actionModuleId = 0;
                            if (info != null)
                            {
                                if (info.Status)
                                {
                                    strChecked = "checked";
                                }
                                actionModuleId = info.ActionModuleId;
                            }
                            
                            <li>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" name="ActionModule" value="@item.ActionId" @strChecked />
                                        <input type="hidden" name="ActionModuleId" value="@actionModuleId" />
                                        <span>@item.DisplayName</span>
                                    </label>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <div class="form-group"></div>
            <div class="form-group text-center col-sm-11">
                <a href="~/Modules/Index/@Model.ModuleId" class="btn btn-info btn-sm">Cancel</a>
                <span class="btn-space"></span>
                <button type="submit" class="btn btn-primary btn-sm">Save</button>
            </div>
        </form>
    </div>
</section>